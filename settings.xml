<?xml version="1.0"?>
<ruleset name="Laravel">
<description>Laravel Coding Standards</description>

<!-- Show colors in console -->
<arg value="-colors"/>

<!-- Show sniff codes in all reports -->
<arg value="s"/>

<!-- Use Squiz as a base -->
<rule ref="Squiz">
<!-- Disable overly strict commenting rules -->
<exclude name="Squiz.Commenting.BlockComment" />
<exclude name="Squiz.Commenting.ClassComment" />
<exclude name="Squiz.Commenting.ClosingDeclarationComment" />
<exclude name="Squiz.Commenting.FileComment" />
<exclude name="Squiz.Commenting.FunctionComment" />
<exclude name="Squiz.Commenting.FunctionCommentThrowTag" />
<exclude name="Squiz.Commenting.LongConditionClosingComment" />
<exclude name="Squiz.Commenting.VariableComment" />
<exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />

<!-- Disable empty line between @param tags and @return -->
    <exclude name="Generic.Commenting.DocComment.NonParamGroup"/>

<!-- Disable classes opening brace on new line -->
<exclude name="Squiz.Classes.ClassDeclaration.OpenBraceNewLine" />

<!-- Disable matching between class name and file name -->
<exclude name="Squiz.Classes.ClassFileName" />

<!-- Allow declaring classes and interfaces in .php files -->
<exclude name="Squiz.Files.FileExtension" />

<!-- Allow functions outside of classes -->
<exclude name="Squiz.Functions.GlobalFunction" />

<!-- Disable functions opening brace on new line -->
<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine" />

<!-- Allow camelCase (at least until this is fixed: https://gitlab.com/heply/heply-coding-standards/-/issues/1)  -->
<exclude name="Squiz.NamingConventions.ValidVariableName.NotCamelCaps"/>

<!-- Allow inline if statements -->
<exclude name="Squiz.PHP.DisallowInlineIf" />

<!-- Disable empty line before the closing brace of a function -->
<exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace" />
</rule>

<!-- Incremenet limit for line length warning and error -->
<rule ref="Generic.Files.LineLength">
<properties>
    <property name="lineLimit" value="180" />
    <property name="absoluteLineLimit" value="200" />
</properties>
</rule>

<!-- Keep functions opening brace on the same line as the declaration -->
<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie" />

<!-- Extend default forbidden functions -->
<rule ref="Generic.PHP.ForbiddenFunctions">
<properties>
    <property name="forbiddenFunctions" type="array">
    <element key="sizeof" value="count"/>
    <element key="delete" value="unset"/>
    <element key="print" value="echo"/>
    <element key="split" value="explode"/>
    <element key="is_null" value="null"/>
    <element key="create_function" value="null"/>
    </property>
</properties>
</rule>

<!-- Add space between concat string operator -->
<rule ref="Squiz.Strings.ConcatenationSpacing">
<properties>
    <property name="spacing" value="1" />
</properties>
</rule>

<!-- Allow double quote usage if string contains var -->
<rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
<severity>0</severity>
</rule>

<!-- Ensure 1 blank line before and after functions, except at the top and bottom -->
<rule ref="Squiz.WhiteSpace.FunctionSpacing">
<properties>
<property name="spacing" value="1" />
<property name="spacingBeforeFirst" value="0" />
<property name="spacingAfterLast" value="0" />
</properties>
</rule>

<!-- Disable blank lines between member vars and before the first member var -->
<rule ref="Squiz.WhiteSpace.MemberVarSpacing">
<properties>
<property name="spacing" value="0" />
<property name="spacingBeforeFirst" value="0" />
</properties>
</rule>
</ruleset>
